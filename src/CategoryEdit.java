
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;
import resourses.Category;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Christos
 */
public class CategoryEdit extends javax.swing.JPanel {
    ArrayList<Integer> ids = new ArrayList<>();
     private final Category Categories[] = DatabaseInfo.loadCategories();
    private final JPanel parent;
    private final JTabbedPane tabs;
    private final ImageIcon icon = new ImageIcon("src/MainMenuIcons/Editcon.png");
    private final ImageIcon icon2 = new ImageIcon("src/MainMenuIcons/DeleteIcon.png");
    /**
     * Creates new form NewCategory
     * @param tabs
     * @param parent
     */
    public CategoryEdit(JTabbedPane tabs,JPanel parent) {
        this.parent=parent;
        this.tabs=tabs;
        initComponents();
        showCategories();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CategoryTable = new javax.swing.JTable();
        confirmbutton = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("Category Edit");

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        CategoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        CategoryTable.setRowHeight(32);
        CategoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CategoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CategoryTable);
        if (CategoryTable.getColumnModel().getColumnCount() > 0) {
            CategoryTable.getColumnModel().getColumn(0).setResizable(false);
            CategoryTable.getColumnModel().getColumn(2).setPreferredWidth(25);
            CategoryTable.getColumnModel().getColumn(3).setResizable(false);
            CategoryTable.getColumnModel().getColumn(3).setPreferredWidth(25);
        }

        confirmbutton.setText("Confirm");
        confirmbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(256, 256, 256)
                        .addComponent(confirmbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(54, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        tabs.setSelectedComponent(parent);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void CategoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CategoryTableMouseClicked
        // TODO add your handling code here:
        int row = CategoryTable.getSelectedRow();
        int column = CategoryTable.getSelectedColumn();
        DefaultTableModel model = (DefaultTableModel) CategoryTable.getModel();
        if(column == 3){
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog (null, "would you like to remove it ?","Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                ids.add((Integer)model.getValueAt(row, 0));
                model.removeRow(row);
            }
        }
        if(column ==2){
            JFrame frame = new JFrame("Editname");
            String name = JOptionPane.showInputDialog(frame, "New name for "+model.getValueAt(row,1));
            String command = "UPDATE product_category\n" +
            "SET name = '"+name+"'\n" +
            "WHERE id = "+(Integer)model.getValueAt(row, 0);
            DatabaseInfo.executeInsert(command);
            model.setValueAt(name, row, 1);
        }
    }//GEN-LAST:event_CategoryTableMouseClicked

    private void confirmbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmbuttonActionPerformed
        if(ids.isEmpty()){tabs.setSelectedComponent(parent);return;}
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, "All missing categories will be removed","Warning",dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
            if(ids.size()==1){
                DatabaseInfo.deletefromtable("product_category",ids.get(0));
            }
            else{
               DatabaseInfo.deletefromtable("product_category",ids);
            }
        }
    }//GEN-LAST:event_confirmbuttonActionPerformed
    private void showCategories(){
        DefaultTableModel model = (DefaultTableModel) CategoryTable.getModel();
        for(int i =0 ;i<Categories.length;i++){
        model.addRow(new Object[]{Categories[i].id,Categories[i].name,icon,icon2});
        CategoryTable.getColumnModel().getColumn(2).setCellRenderer(new ImageRenderer());
        CategoryTable.getColumnModel().getColumn(3).setCellRenderer(new ImageRenderer());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JTable CategoryTable;
    private javax.swing.JButton confirmbutton;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
